on: [push, pull_request_target]
name: build
jobs:
  build-and-test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    if: >
      github.event_name == 'push' ||
      github.event_name == 'pull_request_target' && github.event.pull_request.head.repo.full_name != github.repository
    steps:
      - uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          stable: 'true'
      - name: setup env
        run: |
          echo "PATH=$PATH:$(go env GOPATH)/bin" >> $GITHUB_ENV
      - name: Setup Go Junit Report
        run: go get -u github.com/jstemmer/go-junit-report
      - name: Build
        run: go build
      - name: Test
        run: go test -v -coverprofile=coverage.out ./... 2>&1 | go-junit-report > testReport.xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
         file: ./coverage.out
         env_vars: OS
         flags: unittests
         name: $(git rev-parse --short "$GITHUB_SHA")
         fail_ci_if_error: true
      - name: Upload Unit Test Results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Unit Test Results
          path: testReport.xml

  publish-test-results:
    name: "Publish Unit Tests Results"
    needs: build-and-test
    runs-on: ubuntu-latest
    if: success() || failure()
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1.3
        with:
          check_name: Unit Test Results
          github_token: ${{ secrets.GITHUB_TOKEN }}
          files: testReport.xml